// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Message struct {
	Body                 string   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	In                   int32    `protobuf:"varint,2,opt,name=in,proto3" json:"in,omitempty"`
	Nodisponible         []int32  `protobuf:"varint,9,rep,packed,name=nodisponible,proto3" json:"nodisponible,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Message) GetIn() int32 {
	if m != nil {
		return m.In
	}
	return 0
}

func (m *Message) GetNodisponible() []int32 {
	if m != nil {
		return m.Nodisponible
	}
	return nil
}

type Propuesta struct {
	Id1                  int32    `protobuf:"varint,1,opt,name=id1,proto3" json:"id1,omitempty"`
	Id2                  int32    `protobuf:"varint,2,opt,name=id2,proto3" json:"id2,omitempty"`
	Id3                  int32    `protobuf:"varint,3,opt,name=id3,proto3" json:"id3,omitempty"`
	L1                   []int32  `protobuf:"varint,4,rep,packed,name=l1,proto3" json:"l1,omitempty"`
	L2                   []int32  `protobuf:"varint,5,rep,packed,name=l2,proto3" json:"l2,omitempty"`
	L3                   []int32  `protobuf:"varint,6,rep,packed,name=l3,proto3" json:"l3,omitempty"`
	Pos                  []int32  `protobuf:"varint,7,rep,packed,name=pos,proto3" json:"pos,omitempty"`
	Titulo               string   `protobuf:"bytes,8,opt,name=titulo,proto3" json:"titulo,omitempty"`
	Nodisponible         []int32  `protobuf:"varint,9,rep,packed,name=nodisponible,proto3" json:"nodisponible,omitempty"`
	In                   int32    `protobuf:"varint,10,opt,name=in,proto3" json:"in,omitempty"`
	Chosendn             string   `protobuf:"bytes,11,opt,name=chosendn,proto3" json:"chosendn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Propuesta) Reset()         { *m = Propuesta{} }
func (m *Propuesta) String() string { return proto.CompactTextString(m) }
func (*Propuesta) ProtoMessage()    {}
func (*Propuesta) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *Propuesta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Propuesta.Unmarshal(m, b)
}
func (m *Propuesta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Propuesta.Marshal(b, m, deterministic)
}
func (m *Propuesta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Propuesta.Merge(m, src)
}
func (m *Propuesta) XXX_Size() int {
	return xxx_messageInfo_Propuesta.Size(m)
}
func (m *Propuesta) XXX_DiscardUnknown() {
	xxx_messageInfo_Propuesta.DiscardUnknown(m)
}

var xxx_messageInfo_Propuesta proto.InternalMessageInfo

func (m *Propuesta) GetId1() int32 {
	if m != nil {
		return m.Id1
	}
	return 0
}

func (m *Propuesta) GetId2() int32 {
	if m != nil {
		return m.Id2
	}
	return 0
}

func (m *Propuesta) GetId3() int32 {
	if m != nil {
		return m.Id3
	}
	return 0
}

func (m *Propuesta) GetL1() []int32 {
	if m != nil {
		return m.L1
	}
	return nil
}

func (m *Propuesta) GetL2() []int32 {
	if m != nil {
		return m.L2
	}
	return nil
}

func (m *Propuesta) GetL3() []int32 {
	if m != nil {
		return m.L3
	}
	return nil
}

func (m *Propuesta) GetPos() []int32 {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *Propuesta) GetTitulo() string {
	if m != nil {
		return m.Titulo
	}
	return ""
}

func (m *Propuesta) GetNodisponible() []int32 {
	if m != nil {
		return m.Nodisponible
	}
	return nil
}

func (m *Propuesta) GetIn() int32 {
	if m != nil {
		return m.In
	}
	return 0
}

func (m *Propuesta) GetChosendn() string {
	if m != nil {
		return m.Chosendn
	}
	return ""
}

type Titulos struct {
	Titulos              []string `protobuf:"bytes,1,rep,name=titulos,proto3" json:"titulos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Titulos) Reset()         { *m = Titulos{} }
func (m *Titulos) String() string { return proto.CompactTextString(m) }
func (*Titulos) ProtoMessage()    {}
func (*Titulos) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *Titulos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Titulos.Unmarshal(m, b)
}
func (m *Titulos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Titulos.Marshal(b, m, deterministic)
}
func (m *Titulos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Titulos.Merge(m, src)
}
func (m *Titulos) XXX_Size() int {
	return xxx_messageInfo_Titulos.Size(m)
}
func (m *Titulos) XXX_DiscardUnknown() {
	xxx_messageInfo_Titulos.DiscardUnknown(m)
}

var xxx_messageInfo_Titulos proto.InternalMessageInfo

func (m *Titulos) GetTitulos() []string {
	if m != nil {
		return m.Titulos
	}
	return nil
}

type Response struct {
	Info                 string   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Elegido              int32    `protobuf:"varint,3,opt,name=elegido,proto3" json:"elegido,omitempty"`
	Cantidad             uint64   `protobuf:"varint,4,opt,name=cantidad,proto3" json:"cantidad,omitempty"`
	FileChunk            []byte   `protobuf:"bytes,5,opt,name=fileChunk,proto3" json:"fileChunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *Response) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response) GetElegido() int32 {
	if m != nil {
		return m.Elegido
	}
	return 0
}

func (m *Response) GetCantidad() uint64 {
	if m != nil {
		return m.Cantidad
	}
	return 0
}

func (m *Response) GetFileChunk() []byte {
	if m != nil {
		return m.FileChunk
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{4}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Message)(nil), "chat.Message")
	proto.RegisterType((*Propuesta)(nil), "chat.Propuesta")
	proto.RegisterType((*Titulos)(nil), "chat.Titulos")
	proto.RegisterType((*Response)(nil), "chat.Response")
	proto.RegisterType((*Empty)(nil), "chat.Empty")
}

func init() {
	proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54)
}

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 616 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xef, 0x6e, 0xd3, 0x30,
	0x10, 0x6f, 0xfa, 0x67, 0x6d, 0xae, 0xdb, 0xd8, 0x3c, 0x04, 0xd6, 0xc4, 0x87, 0x2a, 0x48, 0x28,
	0xd2, 0x46, 0xd1, 0x92, 0x0d, 0x90, 0x90, 0x90, 0x46, 0x99, 0xd8, 0x97, 0xc1, 0xc8, 0x18, 0xdf,
	0x9d, 0xc4, 0x6b, 0x2d, 0x52, 0x3b, 0xb2, 0x53, 0xa4, 0xbd, 0x00, 0xcf, 0xc2, 0xbb, 0xf1, 0x12,
	0xc8, 0x4e, 0xd2, 0xb2, 0x06, 0x94, 0x8c, 0x6f, 0xf7, 0xbb, 0xbb, 0xdf, 0xef, 0x7c, 0x97, 0x3b,
	0x05, 0x20, 0x9a, 0x91, 0x6c, 0x9c, 0x4a, 0x91, 0x09, 0xd4, 0xd5, 0xb6, 0xf3, 0x19, 0xfa, 0x17,
	0x54, 0x29, 0x32, 0xa5, 0x08, 0x41, 0x37, 0x14, 0xf1, 0x2d, 0xb6, 0x46, 0x96, 0x6b, 0x07, 0xc6,
	0x46, 0xdb, 0xd0, 0x66, 0x1c, 0xb7, 0x47, 0x96, 0xdb, 0x0b, 0xda, 0x8c, 0x23, 0x07, 0x36, 0xb9,
	0x88, 0x99, 0x4a, 0x05, 0x67, 0x61, 0x42, 0xb1, 0x3d, 0xea, 0xb8, 0xbd, 0xe0, 0x8e, 0xcf, 0xf9,
	0x65, 0x81, 0x7d, 0x29, 0x45, 0xba, 0xa0, 0x2a, 0x23, 0x68, 0x07, 0x3a, 0x2c, 0x3e, 0x32, 0xa2,
	0xbd, 0x40, 0x9b, 0xb9, 0xc7, 0x2b, 0x44, 0xb5, 0x99, 0x7b, 0x7c, 0xdc, 0x29, 0x3d, 0xbe, 0xae,
	0x9b, 0x1c, 0xe1, 0xae, 0x51, 0x6f, 0x27, 0x47, 0x06, 0x7b, 0xb8, 0x57, 0x60, 0xcf, 0x60, 0x1f,
	0x6f, 0x14, 0xd8, 0xd7, 0x0a, 0xa9, 0x50, 0xb8, 0x6f, 0x1c, 0xda, 0x44, 0x8f, 0x60, 0x23, 0x63,
	0xd9, 0x22, 0x11, 0x78, 0x60, 0xfa, 0x29, 0x50, 0x93, 0x0e, 0x8a, 0xae, 0x61, 0xd9, 0xf5, 0x3e,
	0x0c, 0xa2, 0x99, 0x50, 0x94, 0xc7, 0x1c, 0x0f, 0x8d, 0xda, 0x12, 0x3b, 0x4f, 0xa1, 0xff, 0xc5,
	0x28, 0x2b, 0x84, 0xa1, 0x9f, 0x17, 0x51, 0xd8, 0x1a, 0x75, 0x5c, 0x3b, 0x28, 0xa1, 0xf3, 0xc3,
	0x82, 0x41, 0x40, 0xb5, 0xbe, 0x32, 0x73, 0x66, 0xfc, 0x46, 0x94, 0x73, 0xd6, 0xb6, 0xf6, 0x71,
	0x32, 0xa7, 0x66, 0x28, 0x76, 0x60, 0x6c, 0x2d, 0x47, 0x13, 0x3a, 0x65, 0xb1, 0x28, 0x26, 0x53,
	0x42, 0xf3, 0x1e, 0xc2, 0x33, 0x16, 0x93, 0x18, 0x77, 0x47, 0x96, 0xdb, 0x0d, 0x96, 0x18, 0x3d,
	0x01, 0xfb, 0x86, 0x25, 0x74, 0x32, 0x5b, 0xf0, 0x6f, 0xb8, 0x37, 0xb2, 0xdc, 0xcd, 0x60, 0xe5,
	0x70, 0xfa, 0xd0, 0x3b, 0x9b, 0xa7, 0xd9, 0xad, 0xf7, 0xd3, 0x86, 0xe1, 0x64, 0x46, 0xb2, 0x2b,
	0x2a, 0xbf, 0xb3, 0x88, 0xa2, 0x03, 0x18, 0x5c, 0x91, 0xdb, 0x73, 0x9a, 0x24, 0x02, 0x6d, 0x8f,
	0xcd, 0x9a, 0x94, 0x0f, 0xde, 0xdf, 0xca, 0x71, 0xb1, 0x27, 0x4e, 0x0b, 0x1d, 0x80, 0x5d, 0x26,
	0x7b, 0xe8, 0x6e, 0xb4, 0x9a, 0xec, 0xc3, 0xee, 0x25, 0x8d, 0x99, 0x9c, 0x08, 0x7e, 0xc3, 0xe4,
	0x9c, 0x44, 0x4c, 0xf0, 0x5a, 0xd2, 0x31, 0xec, 0x7c, 0xa0, 0x9c, 0x4a, 0x22, 0x57, 0x9b, 0xb4,
	0xc6, 0x79, 0x90, 0xc3, 0x65, 0xdc, 0x69, 0xa1, 0x43, 0x3d, 0xe5, 0x94, 0xc8, 0x8c, 0x49, 0xb4,
	0x1e, 0xae, 0xd6, 0x38, 0x5c, 0x75, 0xe1, 0xd7, 0xf7, 0x7c, 0x02, 0xbb, 0x67, 0x2a, 0x92, 0x2c,
	0x64, 0x7f, 0x3c, 0xa9, 0xbe, 0xc8, 0x1b, 0x78, 0x7c, 0x4e, 0x93, 0x94, 0xca, 0xff, 0x21, 0xbf,
	0x86, 0x87, 0x15, 0xda, 0x7b, 0xa6, 0x1a, 0x30, 0xdf, 0xc2, 0xfe, 0x3f, 0xca, 0x36, 0xe3, 0xbf,
	0x80, 0xad, 0xd3, 0xa9, 0xa4, 0x53, 0x22, 0xf3, 0xe5, 0xae, 0xfd, 0x60, 0x27, 0xb0, 0x97, 0x17,
	0xbc, 0x1f, 0xed, 0x10, 0xe0, 0x2b, 0x95, 0xe5, 0x01, 0xfd, 0x3d, 0xbb, 0x88, 0x3a, 0x2d, 0xe4,
	0xc1, 0x4e, 0x5e, 0xe4, 0x1e, 0x9c, 0x63, 0x40, 0x9f, 0xc2, 0x4c, 0xef, 0xd2, 0x75, 0xc8, 0x22,
	0xb3, 0x7d, 0xb4, 0x9e, 0x35, 0x86, 0xcd, 0x77, 0x0b, 0x15, 0x11, 0x69, 0xce, 0x66, 0x99, 0x5f,
	0x24, 0x54, 0xfb, 0x18, 0xc3, 0xf0, 0x9c, 0x44, 0x74, 0x2d, 0xbd, 0x94, 0x5f, 0x5b, 0x2e, 0xa7,
	0x85, 0x9e, 0x41, 0xf7, 0x9a, 0x33, 0xd9, 0x60, 0xac, 0xbb, 0xeb, 0x77, 0xe0, 0x35, 0x38, 0x84,
	0x97, 0x80, 0x2a, 0x37, 0xe7, 0x35, 0xf8, 0xec, 0xaf, 0x60, 0xaf, 0xc2, 0xfb, 0x78, 0xd1, 0x80,
	0x78, 0x00, 0xf6, 0x84, 0xcc, 0x43, 0x46, 0x64, 0x70, 0x5a, 0xdb, 0xd4, 0x73, 0x18, 0x4e, 0x04,
	0x57, 0x8b, 0x24, 0x6b, 0x92, 0x1e, 0x6e, 0x98, 0xff, 0x95, 0xff, 0x3b, 0x00, 0x00, 0xff, 0xff,
	0xb5, 0x06, 0x7a, 0x2d, 0xbd, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	SayHello(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Message, error)
	SayHello2(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	PedirConfirmacion(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	GenerarPropuesta(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Propuesta, error)
	Repartir(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error)
	SayHello3(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Message, error)
	EscribirPropuesta(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error)
	HelperEscribirPropuesta(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error)
	EscribirPropuestaDis(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error)
	HelperEscribirPropuestaDis(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error)
	AgregarTitulo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	HelperAgregarTitulo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	VerTitulos(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error)
	HelperVerTitulos(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error)
	ObtenerUbicaciones(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error)
	BuscarChunks(ctx context.Context, in *Titulos, opts ...grpc.CallOption) (*Message, error)
	HacerChunks(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Response, error)
	Unir(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	GenerarPropuesta2(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Propuesta, error)
	PedirConfirmacion2(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error)
	PedirConfirmacionNM(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error)
	CambiarRA(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	ConsultarRA(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
}

type chatServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatServiceClient(cc grpc.ClientConnInterface) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) SayHello(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) SayHello2(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/SayHello2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) PedirConfirmacion(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/PedirConfirmacion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) GenerarPropuesta(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Propuesta, error) {
	out := new(Propuesta)
	err := c.cc.Invoke(ctx, "/chat.ChatService/GenerarPropuesta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) Repartir(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/Repartir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) SayHello3(ctx context.Context, in *Response, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/SayHello3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) EscribirPropuesta(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/EscribirPropuesta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) HelperEscribirPropuesta(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/HelperEscribirPropuesta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) EscribirPropuestaDis(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/EscribirPropuestaDis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) HelperEscribirPropuestaDis(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/HelperEscribirPropuestaDis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) AgregarTitulo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/AgregarTitulo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) HelperAgregarTitulo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/HelperAgregarTitulo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) VerTitulos(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error) {
	out := new(Titulos)
	err := c.cc.Invoke(ctx, "/chat.ChatService/VerTitulos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) HelperVerTitulos(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error) {
	out := new(Titulos)
	err := c.cc.Invoke(ctx, "/chat.ChatService/HelperVerTitulos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) ObtenerUbicaciones(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Titulos, error) {
	out := new(Titulos)
	err := c.cc.Invoke(ctx, "/chat.ChatService/ObtenerUbicaciones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) BuscarChunks(ctx context.Context, in *Titulos, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/BuscarChunks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) HacerChunks(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/chat.ChatService/HacerChunks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) Unir(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/Unir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) GenerarPropuesta2(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Propuesta, error) {
	out := new(Propuesta)
	err := c.cc.Invoke(ctx, "/chat.ChatService/GenerarPropuesta2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) PedirConfirmacion2(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/PedirConfirmacion2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) PedirConfirmacionNM(ctx context.Context, in *Propuesta, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/PedirConfirmacionNM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) CambiarRA(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/CambiarRA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) ConsultarRA(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/chat.ChatService/ConsultarRA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	SayHello(context.Context, *Response) (*Message, error)
	SayHello2(context.Context, *Message) (*Message, error)
	PedirConfirmacion(context.Context, *Message) (*Message, error)
	GenerarPropuesta(context.Context, *Message) (*Propuesta, error)
	Repartir(context.Context, *Propuesta) (*Message, error)
	SayHello3(context.Context, *Response) (*Message, error)
	EscribirPropuesta(context.Context, *Propuesta) (*Message, error)
	HelperEscribirPropuesta(context.Context, *Propuesta) (*Message, error)
	EscribirPropuestaDis(context.Context, *Propuesta) (*Message, error)
	HelperEscribirPropuestaDis(context.Context, *Propuesta) (*Message, error)
	AgregarTitulo(context.Context, *Message) (*Message, error)
	HelperAgregarTitulo(context.Context, *Message) (*Message, error)
	VerTitulos(context.Context, *Message) (*Titulos, error)
	HelperVerTitulos(context.Context, *Message) (*Titulos, error)
	ObtenerUbicaciones(context.Context, *Message) (*Titulos, error)
	BuscarChunks(context.Context, *Titulos) (*Message, error)
	HacerChunks(context.Context, *Message) (*Response, error)
	Unir(context.Context, *Message) (*Message, error)
	GenerarPropuesta2(context.Context, *Message) (*Propuesta, error)
	PedirConfirmacion2(context.Context, *Propuesta) (*Message, error)
	PedirConfirmacionNM(context.Context, *Propuesta) (*Message, error)
	CambiarRA(context.Context, *Message) (*Message, error)
	ConsultarRA(context.Context, *Message) (*Message, error)
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) SayHello(ctx context.Context, req *Response) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedChatServiceServer) SayHello2(ctx context.Context, req *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello2 not implemented")
}
func (*UnimplementedChatServiceServer) PedirConfirmacion(ctx context.Context, req *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PedirConfirmacion not implemented")
}
func (*UnimplementedChatServiceServer) GenerarPropuesta(ctx context.Context, req *Message) (*Propuesta, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerarPropuesta not implemented")
}
func (*UnimplementedChatServiceServer) Repartir(ctx context.Context, req *Propuesta) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Repartir not implemented")
}
func (*UnimplementedChatServiceServer) SayHello3(ctx context.Context, req *Response) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello3 not implemented")
}
func (*UnimplementedChatServiceServer) EscribirPropuesta(ctx context.Context, req *Propuesta) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EscribirPropuesta not implemented")
}
func (*UnimplementedChatServiceServer) HelperEscribirPropuesta(ctx context.Context, req *Propuesta) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelperEscribirPropuesta not implemented")
}
func (*UnimplementedChatServiceServer) EscribirPropuestaDis(ctx context.Context, req *Propuesta) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EscribirPropuestaDis not implemented")
}
func (*UnimplementedChatServiceServer) HelperEscribirPropuestaDis(ctx context.Context, req *Propuesta) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelperEscribirPropuestaDis not implemented")
}
func (*UnimplementedChatServiceServer) AgregarTitulo(ctx context.Context, req *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgregarTitulo not implemented")
}
func (*UnimplementedChatServiceServer) HelperAgregarTitulo(ctx context.Context, req *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelperAgregarTitulo not implemented")
}
func (*UnimplementedChatServiceServer) VerTitulos(ctx context.Context, req *Message) (*Titulos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerTitulos not implemented")
}
func (*UnimplementedChatServiceServer) HelperVerTitulos(ctx context.Context, req *Message) (*Titulos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelperVerTitulos not implemented")
}
func (*UnimplementedChatServiceServer) ObtenerUbicaciones(ctx context.Context, req *Message) (*Titulos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ObtenerUbicaciones not implemented")
}
func (*UnimplementedChatServiceServer) BuscarChunks(ctx context.Context, req *Titulos) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuscarChunks not implemented")
}
func (*UnimplementedChatServiceServer) HacerChunks(ctx context.Context, req *Message) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HacerChunks not implemented")
}
func (*UnimplementedChatServiceServer) Unir(ctx context.Context, req *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unir not implemented")
}
func (*UnimplementedChatServiceServer) GenerarPropuesta2(ctx context.Context, req *Message) (*Propuesta, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerarPropuesta2 not implemented")
}
func (*UnimplementedChatServiceServer) PedirConfirmacion2(ctx context.Context, req *Propuesta) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PedirConfirmacion2 not implemented")
}
func (*UnimplementedChatServiceServer) PedirConfirmacionNM(ctx context.Context, req *Propuesta) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PedirConfirmacionNM not implemented")
}
func (*UnimplementedChatServiceServer) CambiarRA(ctx context.Context, req *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CambiarRA not implemented")
}
func (*UnimplementedChatServiceServer) ConsultarRA(ctx context.Context, req *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConsultarRA not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Response)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SayHello(ctx, req.(*Response))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_SayHello2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SayHello2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/SayHello2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SayHello2(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_PedirConfirmacion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).PedirConfirmacion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/PedirConfirmacion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).PedirConfirmacion(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_GenerarPropuesta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).GenerarPropuesta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/GenerarPropuesta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).GenerarPropuesta(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_Repartir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Repartir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/Repartir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Repartir(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_SayHello3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Response)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SayHello3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/SayHello3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SayHello3(ctx, req.(*Response))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_EscribirPropuesta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).EscribirPropuesta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/EscribirPropuesta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).EscribirPropuesta(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_HelperEscribirPropuesta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).HelperEscribirPropuesta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/HelperEscribirPropuesta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).HelperEscribirPropuesta(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_EscribirPropuestaDis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).EscribirPropuestaDis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/EscribirPropuestaDis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).EscribirPropuestaDis(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_HelperEscribirPropuestaDis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).HelperEscribirPropuestaDis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/HelperEscribirPropuestaDis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).HelperEscribirPropuestaDis(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_AgregarTitulo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).AgregarTitulo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/AgregarTitulo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).AgregarTitulo(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_HelperAgregarTitulo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).HelperAgregarTitulo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/HelperAgregarTitulo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).HelperAgregarTitulo(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_VerTitulos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).VerTitulos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/VerTitulos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).VerTitulos(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_HelperVerTitulos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).HelperVerTitulos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/HelperVerTitulos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).HelperVerTitulos(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_ObtenerUbicaciones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).ObtenerUbicaciones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/ObtenerUbicaciones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).ObtenerUbicaciones(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_BuscarChunks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Titulos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).BuscarChunks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/BuscarChunks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).BuscarChunks(ctx, req.(*Titulos))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_HacerChunks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).HacerChunks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/HacerChunks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).HacerChunks(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_Unir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Unir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/Unir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Unir(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_GenerarPropuesta2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).GenerarPropuesta2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/GenerarPropuesta2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).GenerarPropuesta2(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_PedirConfirmacion2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).PedirConfirmacion2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/PedirConfirmacion2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).PedirConfirmacion2(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_PedirConfirmacionNM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Propuesta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).PedirConfirmacionNM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/PedirConfirmacionNM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).PedirConfirmacionNM(ctx, req.(*Propuesta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_CambiarRA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).CambiarRA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/CambiarRA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).CambiarRA(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_ConsultarRA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).ConsultarRA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/ConsultarRA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).ConsultarRA(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _ChatService_SayHello_Handler,
		},
		{
			MethodName: "SayHello2",
			Handler:    _ChatService_SayHello2_Handler,
		},
		{
			MethodName: "PedirConfirmacion",
			Handler:    _ChatService_PedirConfirmacion_Handler,
		},
		{
			MethodName: "GenerarPropuesta",
			Handler:    _ChatService_GenerarPropuesta_Handler,
		},
		{
			MethodName: "Repartir",
			Handler:    _ChatService_Repartir_Handler,
		},
		{
			MethodName: "SayHello3",
			Handler:    _ChatService_SayHello3_Handler,
		},
		{
			MethodName: "EscribirPropuesta",
			Handler:    _ChatService_EscribirPropuesta_Handler,
		},
		{
			MethodName: "HelperEscribirPropuesta",
			Handler:    _ChatService_HelperEscribirPropuesta_Handler,
		},
		{
			MethodName: "EscribirPropuestaDis",
			Handler:    _ChatService_EscribirPropuestaDis_Handler,
		},
		{
			MethodName: "HelperEscribirPropuestaDis",
			Handler:    _ChatService_HelperEscribirPropuestaDis_Handler,
		},
		{
			MethodName: "AgregarTitulo",
			Handler:    _ChatService_AgregarTitulo_Handler,
		},
		{
			MethodName: "HelperAgregarTitulo",
			Handler:    _ChatService_HelperAgregarTitulo_Handler,
		},
		{
			MethodName: "VerTitulos",
			Handler:    _ChatService_VerTitulos_Handler,
		},
		{
			MethodName: "HelperVerTitulos",
			Handler:    _ChatService_HelperVerTitulos_Handler,
		},
		{
			MethodName: "ObtenerUbicaciones",
			Handler:    _ChatService_ObtenerUbicaciones_Handler,
		},
		{
			MethodName: "BuscarChunks",
			Handler:    _ChatService_BuscarChunks_Handler,
		},
		{
			MethodName: "HacerChunks",
			Handler:    _ChatService_HacerChunks_Handler,
		},
		{
			MethodName: "Unir",
			Handler:    _ChatService_Unir_Handler,
		},
		{
			MethodName: "GenerarPropuesta2",
			Handler:    _ChatService_GenerarPropuesta2_Handler,
		},
		{
			MethodName: "PedirConfirmacion2",
			Handler:    _ChatService_PedirConfirmacion2_Handler,
		},
		{
			MethodName: "PedirConfirmacionNM",
			Handler:    _ChatService_PedirConfirmacionNM_Handler,
		},
		{
			MethodName: "CambiarRA",
			Handler:    _ChatService_CambiarRA_Handler,
		},
		{
			MethodName: "ConsultarRA",
			Handler:    _ChatService_ConsultarRA_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat.proto",
}
